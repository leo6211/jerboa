name: Release APK

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0

jobs:
  build-and-release:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build Release APK
      run: ./gradlew assembleRelease

    - name: Sign APK (optional - requires signing key setup)
      # Uncomment and configure if you have signing keys
      # run: |
      #   echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks
      #   ./gradlew assembleRelease \
      #     -Pandroid.injected.signing.store.file=keystore.jks \
      #     -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
      #     -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
      #     -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          Changes in this Release:
          - Auto-generated release from tag ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: jerboa-${{ steps.get_version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive